# Welcome to Graphcool!
#
# This file is the main config file for your Graphcool Service.
# It's very minimal at this point and uses default values.
# We've included a hello world function here.
# Just run `graphcool deploy` to have the first running Graphcool Service.
#
# Check out some examples:
#    github.com/graphcool/examples
#
# Here are the reference docs of this definition format:
# https://docs-next.graph.cool/reference/basics/project-configuration-opheidaix3
#
# Happy Coding!


# In the types.graphql you define your data schema
types: ./types.graphql


functions:

# added by email-password template:

  signup:
    type: resolver
    schema: ./templates/email-password/signup.graphql
    handler:
      code: ./templates/email-password/signup.ts

  authenticate:
    type: resolver
    schema: ./templates/email-password/authenticate.graphql
    handler:
      code: ./templates/email-password/authenticate.ts

  loggedInUser:
    type: resolver
    schema: ./templates/email-password/loggedInUser.graphql
    handler:
      code: ./templates/email-password/loggedInUser.ts


# Model/Relation permissions are used to limit the API access
# To take the burden of thinking about those while development, we
# preconfigured the wildcard ("*") permission that allows everything
# Read more here:
# https://docs-next.graph.cool/reference/auth/authorization/overview-iegoo0heez
permissions:

  # Types ------------------------------------------------------------------------

- operation: Party.read
  authenticated: true
  # TODO: make an invite/join system so only members can view party
  # query: ./permissions/readParty.graphql

- operation: Party.create
  authenticated: true

  # Only the author of a party can update it
- operation: Party.update
  authenticated: true
  query: ./permissions/updateOrDeleteParty.graphql

  # Only the author of a party can delete it
- operation: Party.delete
  authenticated: true
  query: ./permissions/updateOrDeleteParty.graphql


- operation: Character.create
  authenticated: true
- operation: Character.read
  authenticated: true
- operation: Character.update
  authenticated: true


- operation: CharacterClass.create
  authenticated: true
- operation: CharacterClass.update
  authenticated: true
- operation: CharacterClass.read
  authenticated: true


  # Everyone can read the id, name and email fields of users
- operation: User.read
  fields:
    - id
    - name
    - email

  # Relations ------------------------------------------------------------------------

  # Only authenticated users can create an owned relation between a user and a party
- operation: UserOwnedParties.connect
  authenticated: true

  # Only authenticated users can create a joined relation between a user and a party
- operation: UserJoinedParties.connect
  authenticated: true

  # Only authenticated users can create a joined relation between a character and a party
- operation: PartyCharacter.connect
  authenticated: true

  # Only authenticated users can create a joined relation between a character and a character class
- operation: CharacterOnCharacterClass.connect
  authenticated: true

# Your root tokens used for functions to get full access to the API
# Read more here:
# https://docs-next.graph.cool/reference/auth/authentication/authentication-tokens-eip7ahqu5o
rootTokens:
- mytoken

